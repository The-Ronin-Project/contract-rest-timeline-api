---
openapi: 3.0.2
info:
    title: Timeline Service API
    description: |-
        The [Timeline Service](https://projectronin.atlassian.net/wiki/spaces/ENG/pages/1990393974/Timeline+Service):
            - consumes events containing reported symptoms data from [CTS](https://projectronin.atlassian.net/wiki/spaces/ENG/pages/1969750023/Clinician+Triage+Service) (Clinician Triage Service)
            - stores a subset of that information needed to track timeline-oriented symptoms data
            - serves said data pre-transformed/optimized to the frontend

        To authorize requests in local & dev environments from this document, click `Authorize`, copy/paste the below auth token, and click `Authorize` again.
        
        ```
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTMzMjgzMjAsImlzcyI6IlNla2kiLCJqdGkiOiIycm9zcW05M2VlbmFwYmlrZm8wMXFrODEiLCJzdWIiOiIxNTFhMjUwOS1lNjllLTQwNDMtYmJhOC1kYmY5ODhkZGE1NTUiLCJ0ZW5hbnRpZCI6ImFwcG9zbmQifQ.gmX_Ad6sgTTW0iogI4kwuhYYbnpn5HGIE5RZxi56Ojs
        ```
    contact:
        name: Team APEX (in Slack)
        url: https://projectronin.slack.com/archives/C03QLMWKE12
    version: 0.0.14
externalDocs:
    description: Find out more about Timeline Service
    url: https://projectronin.atlassian.net/wiki/spaces/ENG/pages/1990393974/Timeline+Service
servers:
    - url: /api/v1
tags:
    - name: Timeline Symptoms
      description: Generic timeline events of various types
    - name: Timeline Vitals
      description: timeline vitals events
    - name: Timeline Metadata
      description: Patient metadata pertaining to timeline
    - name: Mock Events (Local/Dev Only)
      description: Mock publication of events, consumed by CTS synchronously
paths:
    "/events/symptoms":
        post:
            security:
                - Seki: []
            description: Mocks event consumption of Questionnaire Response topic
            operationId: createQuestionnaireResponse
            tags:
                - Mock Events (Local/Dev Only)
            requestBody:
                description: Mocked example payload of Kafka event.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/QuestionnaireResponseEventBody'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/QuestionnaireResponseEventResponse"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.
    "/events/vitals":
        post:
            security:
                -   Seki: [ ]
            description: Event consumption of Vitals topic
            operationId: createVitalsObservation
            tags:
                - Mock Events (Local/Dev Only)
            requestBody:
                description: Mocked example payload of Kafka event.
                content:
                    application/json:
                        schema:
                            type: object
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/Vital"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.
    "/tenants/{tenantId}/patients/{patientId}/timeline/metadata":
        parameters:
            - name: patientId
              in: path
              description: ID of patient to query by
              required: true
              schema:
                  type: string
              example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
            - name: tenantId
              in: path
              description: ID of tenant patient and clinician belongs to
              required: true
              schema:
                  type: string
                  example: apposnd
        get:
            security:
                - Seki: []
            description: Get timeline metadata pertaining to when date ranges start/end
                for a patient
            operationId: getTimelineMetadata
            tags:
                - Timeline Metadata
            summary: Get timeline metadata pertaining to specified patient
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TimelineMetadataResponse"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.
    "/tenants/{tenantId}/patients/{patientId}/timeline/symptoms":
        parameters:
            - name: patientId
              in: path
              description: ID of patient to query by
              required: true
              schema:
                  type: string
              example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
            - name: tenantId
              in: path
              description: ID of tenant patient and clinician belongs to
              required: true
              schema:
                type: string
                example: apposnd
        get:
            security:
                - Seki: []
            tags:
                - Timeline Symptoms
            summary: Get symptom timeline events
            description: Get all timeline events where (a) the timeline timestamp is between
                the specified start & end timestamps, and (b) where the timeline event type
                is `symptoms`.
            operationId: getSymptomTimelineEvents
            parameters:
                - name: start
                  in: query
                  description: UTC timestamp representing the (inclusive) starting point of
                      the date range by which to query timeline events. If not provided, no lower limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2023-01-01T00:00:01Z'
                - name: end
                  in: query
                  description: UTC timestamp representing the (exclusive) ending point of the
                      date range by which to query timeline events. If not provided, no upper limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2024-01-01T00:00:01Z'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SymptomReportResponse"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient or tenant not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.
    "/tenants/{tenantId}/patients/{patientId}/timeline/vitals":
        parameters:
            - name: patientId
              in: path
              description: ID of patient to query by
              required: true
              schema:
                  type: string
              example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
            - name: tenantId
              in: path
              description: ID of tenant patient and clinician belongs to
              required: true
              schema:
                  type: string
              example: apposnd
        get:
            security:
                - Seki: []
            tags:
                - Timeline Vitals
            summary: Get vitals timeline events
            description: Get all timeline events where (a) the timeline timestamp is between
                the specified start & end timestamps, and (b) where the timeline event type
                is `vitals`.
            operationId: getVitalsTimelineEvents
            parameters:
                - name: start
                  in: query
                  description: UTC timestamp representing the (inclusive) starting point of
                      the date range by which to query timeline events. If not provided, no lower limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2023-01-01T00:00:01Z'
                - name: end
                  in: query
                  description: UTC timestamp representing the (exclusive) ending point of the
                      date range by which to query timeline events. If not provided, no upper limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2024-01-01T00:00:01Z'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/Vital"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient or tenant not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.
components:
    schemas:
        QuestionnaireResponseEventResponse:
            $ref: '#/components/schemas/SymptomReport'
        QuestionnaireResponseEventBody:
            type: object
            required:
                - patientId
                - tenantId
                - surveyResponseId
                - symptoms
                - alertState
                - completedOn
            properties:
                patientId:
                    type: string
                    example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
                tenantId:
                    type: string
                    example: apposnd
                surveyResponseId:
                    type: integer
                    format: int64
                    example: 1
                symptoms:
                    type: array
                    items:
                        type: string
                        example: fatigue
                writeIn:
                    type: string
                alertState:
                    enum:
                        - NON_ALERT
                        - ALERT
                        - HIGH_ALERT
                qol:
                    type: integer
                    minimum: 0
                    maximum: 100
                completedOn:
                    type: string
                    format: date-time
                    example: '2023-04-20T21:00:00Z'
        SymptomReportResponse:
            type: object
            required:
                - meta
                - data
            properties:
                meta:
                    type: object
                    required:
                        - self
                    properties:
                        self:
                            type: string
                            example: "/api/v1/tenants/apposnd/patients/apposnd-43211234/timeline/symptoms?start=2023-01-01T00:00:01Z&end=2023-03-01T00:00:01Z"
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SymptomReport"

        SymptomReport:
            type: object
            required:
                - id
                - patientId
                - tenantId
                - alertState
                - completedOn
                - rowCreatedAt
                - rowUpdatedAt
                - reportedSymptoms
            properties:
                id:
                    type: string
                    format: string
                    example: 935a9879-e8ce-4c86-9dcc-1ecdc9722283
                patientId:
                    type: string
                    example: cd2d37a5-7967-46b0-b4e7-d91c61aea861
                tenantId:
                    type: string
                    example: cd2d37a5-7967-46b0-b4e7-d91c61aea861
                alertState:
                    type: string
                    example: HIGH_ALERT
                completedOn:
                    type: string
                    format: date-time
                    example: '2023-04-20T21:04:36Z'
                rowCreatedAt:
                    type: string
                    format: date-time
                    example: '2023-04-20T21:04:36Z'
                rowUpdatedAt:
                    type: string
                    format: date-time
                    example: '2023-04-20T21:04:36Z'
                reportedSymptoms:
                    type: array
                    items:
                        type: string
                        example: Fatigue
        TypeMetadata:
            type: object
            required:
                - id
                - displayName
                - dateRange
            properties:
                id:
                    type: string
                    example: 935a9879-e8ce-4c86-9dcc-1ecdc9722283
                displayName:
                    type: string
                units:
                    type: string
                valueTypeLabels:
                    type: object
                    additionalProperties:
                        type: string
                dateRange:
                    $ref: "#/components/schemas/DateRange"
        DateRange:
            type: object
            required:
                - start
                - end
            properties:
                start:
                    type: string
                    format: date-time
                    example: '2020-02-04T14:39:28Z'
                end:
                    type: string
                    format: date-time
                    example: '2023-04-21T19:12:08Z'
        Vital:
            type: object
            required:
                - id
                - date
                - values
            properties:
                id:
                    type: string
                date:
                    type: string
                    description: This will always be a date or a datetime
                    example: '2023-02-22T21:04:36Z'
                values:
                    type: array
                    items:
                        type: object
                        required:
                            - value
                            - low
                            - high
                            - interpretation
                            - sourceType
                        properties:
                            value:
                                type: string
                                example: '88'
                            low:
                                type: string
                                example: '60'
                            high:
                                type: string
                                example: '100'
                            interpretation:
                                type: string
                                example: 'N'
                            sourceType:
                                type: string
                            valueType:
                                type: string
        TimelineMetadataResponse:
            type: object
            required:
                - symptoms
                - vitals
            properties:
                symptoms:
                    type: object
                    required:
                        - types
                        - dateRange
                    properties:
                        types:
                            type: array
                            items:
                                $ref: "#/components/schemas/TypeMetadata"
                        dateRange:
                            $ref: "#/components/schemas/DateRange"
                vitals:
                    type: object
                    required:
                        - types
                        - dateRange
                    properties:
                        types:
                            type: array
                            items:
                                $ref: "#/components/schemas/TypeMetadata"
                        dateRange:
                            $ref: "#/components/schemas/DateRange"

    securitySchemes:
        Seki:
            type: http
            scheme: bearer
            bearerFormat: JWT
