---
openapi: 3.0.2
info:
    title: Timeline Service API
    description: |-
        The [Timeline Service](https://projectronin.atlassian.net/wiki/spaces/ENG/pages/1990393974/Timeline+Service):
            - consumes events containing reported symptoms data from [CTS](https://projectronin.atlassian.net/wiki/spaces/ENG/pages/1969750023/Clinician+Triage+Service) (Clinician Triage Service)
            - stores a subset of that information needed to track timeline-oriented symptoms data
            - serves said data pre-transformed/optimized to the frontend

        To authorize requests in local & dev environments from this document, click `Authorize`, copy/paste the below auth token, and click `Authorize` again.
        
        ```
        eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpYXQiOjE2NTMzMjgzMjAsImlzcyI6IlNla2kiLCJqdGkiOiIycm9zcW05M2VlbmFwYmlrZm8wMXFrODEiLCJzdWIiOiIxNTFhMjUwOS1lNjllLTQwNDMtYmJhOC1kYmY5ODhkZGE1NTUiLCJ0ZW5hbnRpZCI6ImFwcG9zbmQifQ.gmX_Ad6sgTTW0iogI4kwuhYYbnpn5HGIE5RZxi56Ojs
        ```
    contact:
        name: Team APEX (in Slack)
        url: https://projectronin.slack.com/archives/C03QLMWKE12
    version: 0.5.0
externalDocs:
    description: Find out more about Timeline Service
    url: https://projectronin.atlassian.net/wiki/spaces/ENG/pages/1990393974/Timeline+Service
servers:
    - url: /api/v1
tags:
    - name: Timeline Symptoms
      description: Generic timeline events of various types
    - name: Timeline Vitals
      description: timeline vitals events
    - name: Timeline Labs
      description: timeline labs events
    - name: Timeline Events
      description: timeline events
    - name: Timeline Metadata
      description: Patient metadata pertaining to timeline
    - name: Mock Events (Local/Dev Only)
      description: Mock publication of events, consumed by CTS synchronously
paths:
    "/events/symptoms":
        post:
            security:
                - Seki: []
            description: Mocks event consumption of Questionnaire Response topic
            operationId: createQuestionnaireResponse
            tags:
                - Mock Events (Local/Dev Only)
            requestBody:
                description: Mocked example payload of Kafka event.
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/QuestionnaireResponseEventBody'
            responses:
                '201':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/QuestionnaireResponseEventResponse"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.

    "/events/observations":
        post:
            security:
                -   Seki: [ ]
            description: Event consumption of Observations topic - both Vitals and Labs are on this topic
            operationId: createObservation
            tags:
                - Mock Events (Local/Dev Only)
            requestBody:
                description: Mocked example payload of Kafka event.
                content:
                    application/json:
                        schema:
                            type: string
            responses:
                '202':
                    description: The request has been accepted and will be processed in the background
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.

    "/events/document-reference":
        post:
            security:
                -   Seki: [ ]
            description: Event consumption of DocumentReference
            operationId: processDocumentReference
            tags:
                - Mock Events (Local/Dev Only)
            requestBody:
                description: The DocumentReference JSON
                content:
                    application/json:
                        schema:
                            type: string
            responses:
                '202':
                    description: The request has been accepted and will be processed in the background
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.

    "/tenants/{tenantId}/patients/{patientId}/timeline/metadata":
        parameters:
            - name: patientId
              in: path
              description: ID of patient to query by
              required: true
              schema:
                  type: string
              example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
            - name: tenantId
              in: path
              description: ID of tenant patient and clinician belongs to
              required: true
              schema:
                  type: string
                  example: apposnd
        get:
            security:
                - Seki: []
            description: Get timeline metadata pertaining to when date ranges start/end
                for a patient
            operationId: getTimelineMetadata
            tags:
                - Timeline Metadata
            summary: Get timeline metadata pertaining to specified patient
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/TimelineMetadataResponse"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.

    "/tenants/{tenantId}/patients/{patientId}/timeline/symptoms":
        parameters:
            - name: patientId
              in: path
              description: ID of patient to query by
              required: true
              schema:
                  type: string
              example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
            - name: tenantId
              in: path
              description: ID of tenant patient and clinician belongs to
              required: true
              schema:
                type: string
                example: apposnd
        get:
            security:
                - Seki: []
            tags:
                - Timeline Symptoms
            summary: Get symptom timeline events
            description: Get all timeline events where (a) the timeline timestamp is between
                the specified start & end timestamps, and (b) where the timeline event type
                is `symptoms`.
            operationId: getSymptomTimelineEvents
            parameters:
                - name: start
                  in: query
                  description: UTC timestamp representing the (inclusive) starting point of
                      the date range by which to query timeline events. If not provided, no lower limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2023-01-01T00:00:01Z'
                - name: end
                  in: query
                  description: UTC timestamp representing the (exclusive) ending point of the
                      date range by which to query timeline events. If not provided, no upper limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2024-01-01T00:00:01Z'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                $ref: "#/components/schemas/SymptomReportResponse"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient or tenant not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.

    "/tenants/{tenantId}/patients/{patientId}/timeline/vitals":
        parameters:
            - name: patientId
              in: path
              description: ID of patient to query by
              required: true
              schema:
                  type: string
              example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
            - name: tenantId
              in: path
              description: ID of tenant patient and clinician belongs to
              required: true
              schema:
                  type: string
              example: apposnd
        get:
            security:
                - Seki: []
            tags:
                - Timeline Vitals
            summary: Get vitals timeline events
            description: Get all timeline events where (a) the timeline timestamp is between
                the specified start & end timestamps, and (b) where the timeline event type
                is `vitals`.
            operationId: getVitalsTimelineEvents
            parameters:
                - name: start
                  in: query
                  description: UTC timestamp representing the (inclusive) starting point of
                      the date range by which to query timeline events. If not provided, no lower limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2023-01-01T00:00:01Z'
                - name: end
                  in: query
                  description: UTC timestamp representing the (exclusive) ending point of the
                      date range by which to query timeline events. If not provided, no upper limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2024-01-01T00:00:01Z'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/Vital"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient or tenant not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.

    "/tenants/{tenantId}/patients/{patientId}/timeline/labs":
        parameters:
            - name: patientId
              in: path
              description: ID of patient to query by
              required: true
              schema:
                  type: string
              example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
            - name: tenantId
              in: path
              description: ID of tenant patient and clinician belongs to
              required: true
              schema:
                  type: string
              example: apposnd
        get:
            security:
                - Seki: []
            tags:
                - Timeline Labs
            summary: Get labs timeline events
            description: Get all lab events where (a) the timeline timestamp is between
                the specified start & end timestamps, and (b) where the timeline event type
                is `labs`.
            operationId: getLabsTimelineEvents
            parameters:
                - name: start
                  in: query
                  description: UTC timestamp representing the (inclusive) starting point of
                      the date range by which to query timeline events. If not provided, no lower limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2023-01-01T00:00:01Z'
                - name: end
                  in: query
                  description: UTC timestamp representing the (exclusive) ending point of the
                      date range by which to query timeline events. If not provided, no upper limit will be defined.
                  required: false
                  schema:
                      type: string
                      format: date-time
                      example: '2024-01-01T00:00:01Z'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    "$ref": "#/components/schemas/Lab"
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient or tenant not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.

    "/tenants/{tenantId}/patients/{patientId}/timeline/events":
        parameters:
            - name: patientId
              in: path
              description: ID of patient to query by
              required: true
              schema:
                  type: string
              example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
            - name: tenantId
              in: path
              description: ID of tenant patient and clinician belongs to
              required: true
              schema:
                  type: string
              example: apposnd
        get:
            security:
                - Seki: []
            tags:
                - Timeline Events
            summary: Get timeline events
            description: >
                Retrieves "generic" timeline events. In practice, this is all of the timeline events that don't have
                their own endpoints (i.e. labs, vitals, and symptoms are _not_ included in this endpoint).
            operationId: getTimelineEvents
            parameters:
                - name: start
                  in: query
                  description: > 
                    Date representing the (inclusive) starting point of the date range by which to query timeline events
                  required: true
                  schema:
                      type: string
                      format: date-time
                      example: '2023-01-01T06:00:00Z'
                - name: end
                  in: query
                  description: >
                    Date representing the (exclusive) ending point of the date range by which to query timeline events.
                  required: true
                  schema:
                      type: string
                      format: date-time
                      example: '2025-01-01T06:00:00Z'
            responses:
                '200':
                    description: Successful operation
                    content:
                        application/json:
                            schema:
                                type: array
                                items: { $ref: "#/components/schemas/TimelineEventAggregate" }
                '401':
                    description: Unauthorized, you didn’t send your token
                '403':
                    description: Forbidden, you sent your token and I have determined you unworthy
                '404':
                    description: Patient or tenant not found, either that resource doesn’t exist or I don’t want
                        to tell you it does and you don’t have access
                '500':
                    description: Unexpected error.

components:
    schemas:
        QuestionnaireResponseEventResponse:
            $ref: '#/components/schemas/SymptomReport'
        QuestionnaireResponseEventBody:
            type: object
            required:
                - patientId
                - tenantId
                - surveyResponseId
                - symptoms
                - alertState
                - completedOn
            properties:
                patientId:
                    type: string
                    example: 022628c4-d1ea-4ae3-9a6b-04c30ac4f903
                tenantId:
                    type: string
                    example: apposnd
                surveyResponseId:
                    type: integer
                    format: int64
                    example: 1
                symptoms:
                    type: array
                    items:
                        type: string
                        example: fatigue
                writeIn:
                    type: string
                alertState:
                    enum:
                        - NON_ALERT
                        - ALERT
                        - HIGH_ALERT
                qol:
                    type: integer
                    minimum: 0
                    maximum: 100
                completedOn:
                    type: string
                    format: date-time
                    example: '2023-04-20T21:00:00Z'
        SymptomReportResponse:
            type: object
            required:
                - meta
                - data
            properties:
                meta:
                    type: object
                    required:
                        - self
                    properties:
                        self:
                            type: string
                            example: "/api/v1/tenants/apposnd/patients/apposnd-43211234/timeline/symptoms?start=2023-01-01T00:00:01Z&end=2023-03-01T00:00:01Z"
                data:
                    type: array
                    items:
                        "$ref": "#/components/schemas/SymptomReport"

        SymptomReport:
            type: object
            required:
                - id
                - patientId
                - tenantId
                - alertState
                - completedOn
                - rowCreatedAt
                - rowUpdatedAt
                - reportedSymptoms
            properties:
                id:
                    type: string
                    format: string
                    example: 935a9879-e8ce-4c86-9dcc-1ecdc9722283
                patientId:
                    type: string
                    example: cd2d37a5-7967-46b0-b4e7-d91c61aea861
                tenantId:
                    type: string
                    example: cd2d37a5-7967-46b0-b4e7-d91c61aea861
                alertState:
                    type: string
                    example: HIGH_ALERT
                completedOn:
                    type: string
                    format: date-time
                    example: '2023-04-20T21:04:36Z'
                rowCreatedAt:
                    type: string
                    format: date-time
                    example: '2023-04-20T21:04:36Z'
                rowUpdatedAt:
                    type: string
                    format: date-time
                    example: '2023-04-20T21:04:36Z'
                reportedSymptoms:
                    type: array
                    items:
                        type: string
                        example: Fatigue

        TypeMetadata:
            type: object
            required:
                - id
                - displayName
                - dateRange
            properties:
                id:
                    type: string
                    example: 935a9879-e8ce-4c86-9dcc-1ecdc9722283
                displayName:
                    type: string
                units:
                    type: string
                valueTypeLabels:
                    type: object
                    additionalProperties:
                        type: string
                dateRange:
                    $ref: "#/components/schemas/DateRange"
        LabPanelMetadata:
            type: object
            required:
                - id
                - displayName
                - types
                - dateRange
            properties:
                id:
                    type: string
                    description: id of the panel
                types:
                    description: The labs that should be included within this panel, where order matters
                    type: array
                    items:
                        $ref: "#/components/schemas/TypeMetadata"
                displayName:
                    description: The panel name to group labs within. Any labs that do not fall into a panel will be in a 'Misc' panel, like magnesium
                    type: string
                    example: 'H&H'
                dateRange:
                    $ref: "#/components/schemas/DateRange"
        DateRange:
            type: object
            required:
                - start
                - end
            properties:
                start:
                    type: string
                    description: An ISO 8601 date or timestamp
                    example: '2020-02-04T14:39:28Z'
                end:
                    type: string
                    description: An ISO 8601 date or timestamp
                    example: '2023-04-21'
        Comparator:
            type: string
            enum: [ GREATER_THAN, GREATER_THAN_OR_EQUAL, LESS_THAN, LESS_THAN_OR_EQUAL ]
            description: >
                A modifier on a value specifying that the value is relative to some given value rather than an exact
                value. For example, a value of `15` with a comparator of `GREATER_THAN` means that the value is `> 15`.
                Note that a comparator won't be provided when the value is an exact value, or in other words, there is
                no EQUALS comparator - it will just be null.
        Vital:
            type: object
            required:
                - id
                - typeId
                - observationId
                - date
                - values
            properties:
                id:
                    type: string
                    deprecated: true
                    description: >
                        The id of the type of this vital. This can be cross referenced with the metadata
                        response to find out metadata about the type (e.g. the units).
                        
                        Note that (unfortunately/confusingly) this is NOT the id of this vital event itself nor the
                        underlying observation from which it was derived. This field is essentially a misnomer and 
                        should instead be thought of as the equivalent of the typeId for labs.
                typeId:
                    type: string
                    description: >
                        The id of the type of this vital. This can be cross referenced with the metadata response to
                        find out metadata about the type (e.g. the units).
                    
                        Note that this type is from a timeline perspective and not from a purely vital perspective, the
                        main implication of that being that units matter. For example, a BP in mmHg and a BP in PSI are
                        _not_ the same typeId even though they are logically the same vital.
                observationId:
                    type: string
                    description: >
                        The id of the observation from which this vital was derived.
                date:
                    type: string
                    description: This will always be a date or a datetime
                    example: '2023-02-22T21:04:36Z'
                values:
                    type: array
                    description: >
                        The value(s) of this vital. Note that only blood pressure will ever have more than one value in
                        which case the valueType can be used to know which blood pressure component the value is for (
                        i.e. systolic vs diastolic).
                    items:
                        $ref: "#/components/schemas/VitalValue"
        VitalValue:
            type: object
            required:
                - value
                - low
                - high
                - interpretation
                - sourceType
            properties:
                value:
                    type: string
                    example: '88'
                    description: The value of this vital sign.
                comparator:
                    $ref: "#/components/schemas/Comparator"
                low:
                    type: string
                    example: '60'
                    description: The lower boundary of the ref range, if there is one.
                high:
                    type: string
                    example: '100'
                    description: The upper boundary of the ref range, if there is one.
                interpretation:
                    type: string
                    example: 'N'
                    description: The interpretation of the ref range, if there is one. Either N, L, H, or empty.
                sourceType:
                    type: string
                    example: 'EHR Reported'
                    description: >
                        If the source of the interpretation is given from a source or derived by Ronin. Note that this
                        _is not_ an enum, but is a display oriented string that can be used as-is.
                valueType:
                    type: string
                    example: 'systolic'
                    description: >
                        The type of this value. This is only used for blood pressure as other types of vitals only have
                        one value. In the case of blood pressure, it will be either `systolic` or `diastolic`.
        Lab:
            type: object
            required:
                - typeId
                - observationId
                - date
                - value
            properties:
                typeId:
                    type: string
                    description: >
                        The lab type id of this lab, e.g. if it's glucose, sodium, etc. If more information is needed,
                        the lab type id can be referenced against labs.types in the metadata response.
                        
                        Note that this id is from the perspective of a timeline event and not just a lab, the main
                        distinction being that panel and unit matter. For example, a WBC in the H&H panel is a different
                        type of lab timeline event than a lab in the CBC panel, even though they are logically the same
                        lab type.
                observationId:
                    type: string
                    description: >
                        The id of the observation from which this lab result event was derived.
                date:
                    type: string
                    description: This will always be a date or a datetime
                    example: '2023-02-22T21:04:36Z'
                value:
                    type: string
                    example: '23'
                    description: Lab values can be many different types, but this will be a stringified value - it will still need to be concatenated with a comparator and units (from metadata), if present.
                comparator:
                    $ref: "#/components/schemas/Comparator"
                low:
                    type: string
                    example: '60'
                high:
                    type: string
                    example: '100'
                interpretation:
                    type: string
                    example: 'N'
                sourceType:
                    type: string
                    example: 'EHR Reported'
                    description: If the source of the interpretation is given from a source or derived by Ronin
                valueType:
                    type: string
                    example: 'Quantity'
                    description: Type of value, for example quantity (with units and optional comparator), boolean, number, etc

        TimelineMetadataResponse:
            type: object
            required:
                - symptoms
                - vitals
                - labs
                - events
            properties:
                symptoms:
                    type: object
                    required:
                        - types
                        - dateRange
                    properties:
                        types:
                            type: array
                            items:
                                $ref: "#/components/schemas/TypeMetadata"
                        dateRange:
                            $ref: "#/components/schemas/DateRange"
                vitals:
                    type: object
                    required:
                        - types
                        - dateRange
                    properties:
                        types:
                            type: array
                            items:
                                $ref: "#/components/schemas/TypeMetadata"
                        dateRange:
                            $ref: "#/components/schemas/DateRange"
                labs:
                    type: object
                    required:
                        - panels
                        - dateRange
                    properties:
                        dateRange:
                            $ref: "#/components/schemas/DateRange"
                        panels:
                            type: array
                            items:
                                $ref: "#/components/schemas/LabPanelMetadata"
                events:
                    type: object
                    required:
                        - types
                        - dateRange
                    properties:
                        types:
                            type: array
                            description: The metadata for each individual event type
                            items: { $ref: "#/components/schemas/EventTypeMetadata" }
                        dateRange: { $ref: "#/components/schemas/DateRange" }

        EventTypeMetadata:
            type: object
            description: The metadata for a specific event type
            properties:
                type: { $ref: "#/components/schemas/TimelineEventType" }
                displayName:
                    type: string
                    minLength: 1
                    description: "The human displayable name of this event type"
                    example: "Provider Visit"
                dateRange: { $ref: "#/components/schemas/DateRange" }
            required: [ type, displayName, dateRange ]

        TimelineEventType:
            type: string
            enum: [SURGERY, PROCEDURE, IMAGING, PROVIDER_VISIT, LAB_REPORT, PATHOLOGY, BIOMARKER, NLP_ED_VISIT]

        TimelineEvent:
            type: object
            properties:
                id:
                    type: string
                    minLength: 1
                    description: |
                        The unique identifier of this timeline event.
                        
                        Note that this _may_ be the same as the document id but is not guaranteed to be and *should not
                        be used as such*. The document id should be accessed through `additionalFields.documentId` if
                        needed.
                patientId: { type: string, minLength: 1 }
                tenantId: { type: string, minLength: 1 }
                type: { $ref: "#/components/schemas/TimelineEventType" }
                date: { $ref: "#/components/schemas/DateOrDateTime" }
            required: [ id, patientId, tenantId, type, date, additionalFields ]
            discriminator:
                propertyName: type
                mapping:
                    SURGERY: "#/components/schemas/TimelineEventSurgery"
                    PROCEDURE: "#/components/schemas/TimelineEventProcedure"
                    IMAGING: "#/components/schemas/TimelineEventImaging"
                    PROVIDER_VISIT: "#/components/schemas/TimelineEventProviderVisit"
                    LAB_REPORT: "#/components/schemas/TimelineEventLabReport"
                    PATHOLOGY: "#/components/schemas/TimelineEventPathology"
                    BIOMARKER: "#/components/schemas/TimelineEventBiomarker"
                    NLP_ED_VISIT: "#/components/schemas/TimelineEventNlpEdVisit"
        TimelineEventAggregate:
            oneOf:
                - $ref: "#/components/schemas/TimelineEventSurgery"
                - $ref: "#/components/schemas/TimelineEventProcedure"
                - $ref: "#/components/schemas/TimelineEventImaging"
                - $ref: "#/components/schemas/TimelineEventProviderVisit"
                - $ref: "#/components/schemas/TimelineEventLabReport"
                - $ref: "#/components/schemas/TimelineEventPathology"
                - $ref: "#/components/schemas/TimelineEventBiomarker"
                - $ref: "#/components/schemas/TimelineEventNlpEdVisit"

        TimelineEventSurgery:
            allOf:
                - $ref: "#/components/schemas/TimelineEvent"
                - type: object
                  properties:
                      additionalFields: { $ref: "#/components/schemas/TimelineEventSurgeryAdditionalFields" }
                  required: [ additionalFields ]
        TimelineEventSurgeryAdditionalFields:
            allOf:
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithDocumentId"
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithLabel"

        TimelineEventProcedure:
            allOf:
                - $ref: "#/components/schemas/TimelineEvent"
                - type: object
                  properties:
                      additionalFields: { $ref: "#/components/schemas/TimelineEventProcedureAdditionalFields" }
                  required: [ additionalFields ]
        TimelineEventProcedureAdditionalFields:
          allOf:
              - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithDocumentId"
              - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithLabel"

        TimelineEventImaging:
            allOf:
                - $ref: "#/components/schemas/TimelineEvent"
                - type: object
                  properties:
                    additionalFields:
                        $ref: "#/components/schemas/TimelineEventImagingAdditionalFields"
                  required: [ additionalFields ]
        TimelineEventImagingAdditionalFields:
            allOf:
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithDocumentId"
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithLabel"

        TimelineEventProviderVisit:
            allOf:
                - $ref: "#/components/schemas/TimelineEvent"
                - type: object
                  properties:
                      additionalFields: { $ref: "#/components/schemas/TimelineEventProviderVisitAdditionalFields" }
                  required: [ additionalFields ]
        TimelineEventProviderVisitAdditionalFields:
            allOf:
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithDocumentId"
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithLabel"
                - type: object
                  properties:
                      documentProviderAuthors:
                          type: array
                          description: The provider(s) who authored the document associated with this provider visit.
                          items: { $ref: "#/components/schemas/DocumentAuthor" }
                  required: [ documentProviderAuthors ]

        TimelineEventNlpEdVisit:
            allOf:
                -   $ref: "#/components/schemas/TimelineEvent"
                -   type: object
                    properties:
                        additionalFields: { $ref: "#/components/schemas/TimelineEventNlpEdVisitAdditionalFields" }
                    required: [ additionalFields ]
        TimelineEventNlpEdVisitAdditionalFields:
            allOf:
                -   type: object
                    properties:
                        documentIds:
                            type: array
                            items:
                                type: string
                    required: [ documentIds ]

        DocumentAuthor:
            type: object
            description: The author of a document
            properties:
                name:
                    type: string
                    minLength: 1
                    description: "The full name of the author"
            required: [ name ]

        TimelineEventLabReport:
            allOf:
                - $ref: "#/components/schemas/TimelineEvent"
                - type: object
                  properties:
                      additionalFields: { $ref: "#/components/schemas/TimelineEventLabReportAdditionalFields" }
                  required: [ additionalFields ]
        TimelineEventLabReportAdditionalFields:
            allOf:
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithDocumentId"
                # This meaningless second object in the allOf is a hack so the Kotlin generator makes a proper
                # TimelineEventSurgeryAdditionalFields class since if we just reference WithDocumentId it won't.
                - type: object

        TimelineEventPathology:
            allOf:
                -   $ref: "#/components/schemas/TimelineEvent"
                -   type: object
                    properties:
                        additionalFields: { $ref: "#/components/schemas/TimelineEventPathologyAdditionalFields" }
                    required: [ additionalFields ]
        TimelineEventPathologyAdditionalFields:
            allOf:
                -   $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithDocumentId"
                -   $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithLabel"
                -   type: object
                    properties:
                        documentPhysicianAuthors:
                            type: array
                            description: The physician(s) who authored the document associated with this pathology report.
                            items: { $ref: "#/components/schemas/DocumentAuthor" }
                    required: [ documentPhysicianAuthors ]

        TimelineEventBiomarker:
            allOf:
                - $ref: "#/components/schemas/TimelineEvent"
                - type: object
                  properties:
                      additionalFields: { $ref: "#/components/schemas/TimelineEventBiomarkerAdditionalFields" }
                  required: [ additionalFields ]
        TimelineEventBiomarkerAdditionalFields:
            allOf:
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithDocumentId"
                - $ref: "#/components/schemas/TimelineEventAdditionalFieldsWithLabel"
                - type: object
                  properties:
                      documentPhysicianAuthors:
                          type: array
                          description: The physician(s) who authored the document associated with this biomarker report.
                          items: { $ref: "#/components/schemas/DocumentAuthor" }
                  required: [ documentPhysicianAuthors ]

        TimelineEventAdditionalFieldsWithDocumentId:
            type: object
            properties:
                documentId:
                    type: string
                    minLength: 1
                    description: >
                        The document id with which this event is associated. In concrete terms, this links back to a 
                        `DocumentReference.id`.
                    example: apposnd-e4E7wYemJX29aGyQ7tUr6hw9
            required: [ documentId ]
        TimelineEventAdditionalFieldsWithLabel:
            type: object
            properties:
                label:
                    type: string
                    minLength: 1
                    description: >
                        A label approximately describing what this event is in human terms. In practice, this tends to
                        be the DocumentReference.type.text of the associated document, but that isn't guaranteed.
                    example: Progress Notes

        DateOrDateTime:
            type: string
            description: >
                An ISO-8601 date or datetime. In other words, either a date like 2023-04-03 or a datetime like
                2023-04-03T12:34:56Z.
            minLength: 10
            example: 2023-04-03

    securitySchemes:
        Seki:
            type: http
            scheme: bearer
            bearerFormat: JWT
